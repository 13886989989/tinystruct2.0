{"name":"Tinystruct2.0","tagline":"How to use tinystruct - Examples for you","body":"tinystruct2.0\r\n=========\r\n\r\nThis is an example project based on tinystruct2.0, it can work for both C/S application and B/S web application. \r\n\r\nPlease check the example source codes to get more for right now.\r\n\r\nIf you install this code in Tomcat 6.0+, You just access these urls:\r\n\r\n<a href=\"http://localhost:8080/?q=say/Praise%20to%20the%20Lord!\">http://localhost:8080/?q=say/Praise%20to%20the%20Lord! </a><br />\r\n<a href=\"http://localhost:8080/?q=praise\">http://localhost:8080/?q=praise </a><br />\r\n<a href=\"http://localhost:8080/?q=say/Hello%20World\">http://localhost:8080/?q=say/Hello%20World </a><br />\r\n<a href=\"http://localhost:8080/?q=youhappy\">http://localhost:8080/?q=youhappy</a><br />\r\n<a href=\"http://localhost:8080/?q=say/%E4%BD%A0%E7%9F%A5%E9%81%93%E5%85%A8%E4%B8%96%E7%95%8C%E6%9C%80%E7%95%85%E9%94%80%E7%9A%84%E4%B9%A6%E6%98%AF%E5%93%AA%E4%B8%80%E6%9C%AC%E4%B9%A6%E5%90%97%EF%BC%9F\">http://localhost:8080/?q=say/%E4%BD%A0%E7%9F%A5%E9%81%93%E5%85%A8%E4%B8%96%E7%95%8C%E6%9C%80%E7%95%85%E9%94%80%E7%9A%84%E4%B9%A6%E6%98%AF%E5%93%AA%E4%B8%80%E6%9C%AC%E4%B9%A6%E5%90%97%EF%BC%9F</a>\r\n\r\nThe following example is funny, because it support more than one people to edit it in the same time.\r\nso the functionality can be used for <strong>chat</strong>, or <strong>online collaboration</strong>. Just try it for a second.\r\n\r\n<a href=\"http://localhost:8080/?q=tinyeditor\">http://localhost:8080/?q=tinyeditor</a><br />\r\n\r\n-------------------------\r\n```java\r\npackage tinystruct.examples;\r\nimport org.tinystruct.AbstractApplication;\r\nimport org.tinystruct.Application;\r\nimport org.tinystruct.ApplicationContext;\r\nimport org.tinystruct.ApplicationException;\r\nimport org.tinystruct.data.component.Builder;\r\nimport org.tinystruct.data.component.Table;\r\nimport org.tinystruct.data.tools.Generator;\r\nimport org.tinystruct.data.tools.MySQLGenerator;\r\nimport org.tinystruct.system.ApplicationManager;\r\n\r\nimport custom.objects.User;\r\n\r\npublic class firstApplication extends AbstractApplication {\r\n\r\n\t@Override\r\n\tpublic void init() {\r\n\t\t// TODO Auto-generated method stub\r\n\t\tthis.setAction(\"praise\", \"praise\");\r\n\t\tthis.setAction(\"say\", \"say\");\r\n\t\tthis.setAction(\"youhappy\", \"happy\");\r\n\t\t\r\n\t\tthis.setAction(\"user\", \"findUser\");\r\n\t\tthis.setAction(\"users\", \"findUsers\");\r\n\t\t\r\n\t\tthis.setAction(\"version\", \"version\", \"GET\");\r\n\t\tthis.setAction(\"version\", \"setVersion\",\"POST\");\r\n\t\t\r\n\t\tthis.setAction(\"read\", \"read\");\r\n\t\t\r\n\t\tthis.setAction(\"generate\", \"generate_with_user_table\");\r\n\t}\r\n\t\r\n\tpublic String praise(){\r\n\t\treturn \"Praise to the Lord!\";\r\n\t}\r\n\t\r\n\tpublic boolean happy(){\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic Object read(String json,String name){\r\n\t\tBuilder builder = new Builder();\r\n\t\ttry {\r\n\t\t\tbuilder.parse(json);\r\n\t\t} catch (ApplicationException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\treturn builder.get(name);\r\n\t}\r\n\t\r\n\tpublic String say(String words){\r\n\t\tSystem.out.println(words);\r\n\t\treturn \"<h1>\"+words+\"</h1>\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String version() {\r\n\t\t// TODO Auto-generated method stub\r\n\t\treturn this.context.getAttribute(\"name\") + this.context.getAttribute(\"number\").toString();\r\n\t}\r\n\t\r\n\tpublic void setVersion(float number){\r\n\t\tthis.context.setAttribute(\"name\", \"struct\");\r\n\t\tthis.context.setAttribute(\"number\", number);\r\n\t}\r\n\t\r\n\tpublic void generate_with_user_table(){\r\n\t\ttry {\r\n\t\t\tString[] list=new String[]{\"User\"};\r\n\t\t\tGenerator generator=new MySQLGenerator();\r\n\t\t\tfor(String className:list)\r\n\t\t\t{\r\n\t\t\t\tgenerator.setFileName(\"src/custom/objects/\");\r\n\t\t\t\tgenerator.setPackageName(\"custom.objects\");\r\n\t\t\t\tgenerator.importPackages(\"java.util.Date\");\r\n\t\t\t\tgenerator.create(className,className);\r\n\t\t\t\tSystem.out.println(\"class:\"+className+\" table:\"+className);\r\n\t\t\t\tSystem.out.println(\"Done!\");\r\n\t\t\t}\r\n\t\t} catch (ApplicationException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic User findUser(Object userId) throws ApplicationException{\r\n\t\tUser user = new User();\r\n\t\tif(userId!=null){\r\n\t\t\tuser.setId(userId);\r\n\t\t\tuser.findOneById();\r\n\t\t}\r\n\t\t\r\n\t\treturn user;\r\n\t}\r\n\t\r\n\tpublic Table findUsers() throws ApplicationException{\r\n\t\treturn new User().findAll();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The following example code only for you to reference. \r\n\t * @param args\r\n\t * @throws ApplicationException\r\n\t */\r\n\tpublic static void main(String[]args) throws ApplicationException {\r\n\t\tApplicationManager.install(new firstApplication());\r\n\t\t\r\n\t\tSystem.out.println(ApplicationManager.call(\"praise\", null)); // Praise to the Lord!\r\n\t\tSystem.out.println(\"I am \"+ApplicationManager.call(\"youhappy\", null)+\"ly happy\"); // I am truely happy\r\n\t\t\r\n\t\tApplicationManager.call(\"say/Hello World\", null); \t\t\t// Hello World\r\n\t\t\r\n\t\tApplication app=ApplicationManager.get( firstApplication.class.getName()); \r\n\t\tapp.invoke(\"say\", new Object[]{\"<h1>Hello, World!</h1>\"});\t// <h1>Hello, World!</h1>\r\n\t\tapp.invoke(\"say\", new Object[]{\"<h2>Bye!</h2>\"});\t\t\t// <h2>Bye!</h2>\r\n\t\t\r\n\t\tApplicationContext context=new ApplicationContext();\r\n\t\tcontext.setAttribute(\"name\", \"struct\");\r\n\t\tcontext.setAttribute(\"number\", 2.0);\r\n\t\t\r\n\t\tcontext.setAttribute(\"METHOD\", \"GET\");\r\n\t\tSystem.out.println(\"Current version: \"+ApplicationManager.call(\"version\", context)); // Current version: struct2.0\r\n\t\t\r\n\t\tcontext.setAttribute(\"METHOD\", \"POST\");\r\n\t\tApplicationManager.call(\"version/3\", context);\r\n\t\t\r\n\t\tcontext.setAttribute(\"METHOD\", \"GET\");\r\n\t\tSystem.out.println(\"Current version: \"+ApplicationManager.call(\"version\", context)); // Current version: struct3.0\r\n\t\r\n\t\tObject name = app.invoke(\"read\", new Object[]{\"{\\\"name\\\":\\\"Mover\\\",\\\"age\\\":30}\",\"name\"});\r\n\t\tSystem.out.println(name);\r\n\t\t\r\n\t\tApplicationManager.call(\"generate\", null);\r\n\t\t\r\n\t\tSystem.out.println(ApplicationManager.call(\"user/1\", null)); \t// http://localhost:8080/user/1\r\n\t\tSystem.out.println(ApplicationManager.call(\"users\", null));\t\t// http://localhost:8080/users\r\n\t}\r\n}\r\n```\r\n-------------------------\r\n\r\nYou will see them in your browser.\r\n\r\n<blockquote>\r\n<h1>Praise to the Lord!</h1>\r\nPraise to the Lord! \r\n<h1>Hello World</h1>\r\n<i>true</i>\r\n<h1>你知道全世界最畅销的书是哪一本书吗？</h1>\r\n</blockquote>\r\n\r\n---\r\n\r\nAlso please see this project: \r\nhttps://github.com/m0ver/mobile1.0\r\nhttp://ingod.asia\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}